Namespaces:
  =: io.murano.resources
  std: io.murano
  sys: io.murano.system


Name: AWSInstance

Properties:
  name:
    Contract: $.string().notNull()
  image:
    Contract: $.string().notNull()
  agent:
    Contract: $.class(sys:SSHAgent)
    Usage: Runtime
  ipAddresses:
    Contract: [$.string()]
    Usage: Out
  assignFloatingIp:
    Contract: $.bool().notNull()
    Default: false
  floatingIpAddress:
    Contract: $.string()
    Usage: Out

Methods:
  initialize:
    Body:
      - $.environment: $.find(std:Environment).require()
      - $.resources: new(sys:Resources)
      - $.instanceTemplate: {}
      - $._floatingIpOutputName: null
      - $.node: null
      - $.cloud: new(sys:Cloud,id=>$.cloudid)
      - $.agent: new(sys:SSHAgent, host => $,cloud=>$.cloud)

  deploy:
    Arguments:
      plan:
        Contract: {}
    Body:
      - $.driver: new(sys:AWSBinding,$.cloud)
      - $.node: $.driver.createnode($.image,$.flavor,$.name)
      - $.ipAddresses: $.driver.getpublicips($.node)
      - $.agent.setnode($.node)
  destroy:
    Body:
      - $.driver: new(sys:AWSBinding)
      - $.driver.destroynode($.node)
      - $.node: null

